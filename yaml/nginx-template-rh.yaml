apiVersion: v1
kind: Template
description: "You must have RHEL 7 subscription before using this template"
metadata:
  creationTimestamp: null
  name: ${APP_NAME}
objects:
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    host: ${NGINX_ROUTE_HOSTNAME}
    port:
      targetPort: ${NGINX_DEFAULT_HTTP_PORT}-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
  status:
    ingress: null
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - args:
          command:
          - /usr/libexec/s2i/run
          image: registry.access.redhat.com/rhscl/${NGINX_VERSION}-rhel7
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: ${NGINX_DEFAULT_HTTP_PORT}
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: ${NGINX_DEFAULT_HTTP_PORT}-tcp
            timeoutSeconds: 20
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/opt/rh/rh-nginx112/nginx/
            name: volume-s35u4
          - mountPath: /etc/opt/rh/rh-nginx112/nginx/conf.d
            name: volume-1l43r
          - mountPath: /etc/opt/rh/rh-nginx112/nginx/default.d
            name: volume-tlwx7
          - mountPath: /opt/app-root/src
            name: nginx-root
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: volume-s35u4
        - configMap:
            defaultMode: 420
            name: nginx-conf.d
          name: volume-1l43r
        - configMap:
            defaultMode: 420
            name: nginx-default.d
          name: volume-tlwx7
        - name: nginx-root
          persistentVolumeClaim:
            claimName: "nginx-root"
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - nginx
        from:
          kind: ImageStreamTag
          name: ${NGINX_VERSION}-rhel7:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: ${NGINX_DEFAULT_HTTP_PORT}-tcp
      port: ${NGINX_DEFAULT_HTTP_PORT}
      protocol: TCP
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 2
    labels:
      app: ${APP_NAME}
    name: ${NGINX_VERSION}-rhel7
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: registry.access.redhat.com/rhscl/${NGINX_VERSION}-rhel7
      from:
        kind: DockerImage
        name: registry.access.redhat.com/rhscl/${NGINX_VERSION}-rhel7:latest
      generation: 2
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
    creationTimestamp: null
    name: nginx-root
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${ROOT_DIRECTORY_SIZE_IN_GB}Gi
- apiVersion: v1
  data:
    virtualhost.conf: ""
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: nginx-conf.d
- apiVersion: v1
  data:
    mime.types: |
      types {
          text/html                             html htm shtml;
          text/css                              css;
          text/xml                              xml;
          image/gif                             gif;
          image/jpeg                            jpeg jpg;
          application/javascript                js;
          application/atom+xml                  atom;
          application/rss+xml                   rss;

          text/mathml                           mml;
          text/plain                            txt;
          text/vnd.sun.j2me.app-descriptor      jad;
          text/vnd.wap.wml                      wml;
          text/x-component                      htc;

          image/png                             png;
          image/tiff                            tif tiff;
          image/vnd.wap.wbmp                    wbmp;
          image/x-icon                          ico;
          image/x-jng                           jng;
          image/x-ms-bmp                        bmp;
          image/svg+xml                         svg svgz;
          image/webp                            webp;

          application/font-woff                 woff;
          application/java-archive              jar war ear;
          application/json                      json;
          application/mac-binhex40              hqx;
          application/msword                    doc;
          application/pdf                       pdf;
          application/postscript                ps eps ai;
          application/rtf                       rtf;
          application/vnd.apple.mpegurl         m3u8;
          application/vnd.ms-excel              xls;
          application/vnd.ms-fontobject         eot;
          application/vnd.ms-powerpoint         ppt;
          application/vnd.wap.wmlc              wmlc;
          application/vnd.google-earth.kml+xml  kml;
          application/vnd.google-earth.kmz      kmz;
          application/x-7z-compressed           7z;
          application/x-cocoa                   cco;
          application/x-java-archive-diff       jardiff;
          application/x-java-jnlp-file          jnlp;
          application/x-makeself                run;
          application/x-perl                    pl pm;
          application/x-pilot                   prc pdb;
          application/x-rar-compressed          rar;
          application/x-redhat-package-manager  rpm;
          application/x-sea                     sea;
          application/x-shockwave-flash         swf;
          application/x-stuffit                 sit;
          application/x-tcl                     tcl tk;
          application/x-x509-ca-cert            der pem crt;
          application/x-xpinstall               xpi;
          application/xhtml+xml                 xhtml;
          application/xspf+xml                  xspf;
          application/zip                       zip;

          application/octet-stream              bin exe dll;
          application/octet-stream              deb;
          application/octet-stream              dmg;
          application/octet-stream              iso img;
          application/octet-stream              msi msp msm;

          application/vnd.openxmlformats-officedocument.wordprocessingml.document    docx;
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet          xlsx;
          application/vnd.openxmlformats-officedocument.presentationml.presentation  pptx;

          audio/midi                            mid midi kar;
          audio/mpeg                            mp3;
          audio/ogg                             ogg;
          audio/x-m4a                           m4a;
          audio/x-realaudio                     ra;

          video/3gpp                            3gpp 3gp;
          video/mp2t                            ts;
          video/mp4                             mp4;
          video/mpeg                            mpeg mpg;
          video/quicktime                       mov;
          video/webm                            webm;
          video/x-flv                           flv;
          video/x-m4v                           m4v;
          video/x-mng                           mng;
          video/x-ms-asf                        asx asf;
          video/x-ms-wmv                        wmv;
          video/x-msvideo                       avi;
      }
    mime.types.default: |
      types {
          text/html                             html htm shtml;
          text/css                              css;
          text/xml                              xml;
          image/gif                             gif;
          image/jpeg                            jpeg jpg;
          application/javascript                js;
          application/atom+xml                  atom;
          application/rss+xml                   rss;

          text/mathml                           mml;
          text/plain                            txt;
          text/vnd.sun.j2me.app-descriptor      jad;
          text/vnd.wap.wml                      wml;
          text/x-component                      htc;

          image/png                             png;
          image/tiff                            tif tiff;
          image/vnd.wap.wbmp                    wbmp;
          image/x-icon                          ico;
          image/x-jng                           jng;
          image/x-ms-bmp                        bmp;
          image/svg+xml                         svg svgz;
          image/webp                            webp;

          application/font-woff                 woff;
          application/java-archive              jar war ear;
          application/json                      json;
          application/mac-binhex40              hqx;
          application/msword                    doc;
          application/pdf                       pdf;
          application/postscript                ps eps ai;
          application/rtf                       rtf;
          application/vnd.apple.mpegurl         m3u8;
          application/vnd.ms-excel              xls;
          application/vnd.ms-fontobject         eot;
          application/vnd.ms-powerpoint         ppt;
          application/vnd.wap.wmlc              wmlc;
          application/vnd.google-earth.kml+xml  kml;
          application/vnd.google-earth.kmz      kmz;
          application/x-7z-compressed           7z;
          application/x-cocoa                   cco;
          application/x-java-archive-diff       jardiff;
          application/x-java-jnlp-file          jnlp;
          application/x-makeself                run;
          application/x-perl                    pl pm;
          application/x-pilot                   prc pdb;
          application/x-rar-compressed          rar;
          application/x-redhat-package-manager  rpm;
          application/x-sea                     sea;
          application/x-shockwave-flash         swf;
          application/x-stuffit                 sit;
          application/x-tcl                     tcl tk;
          application/x-x509-ca-cert            der pem crt;
          application/x-xpinstall               xpi;
          application/xhtml+xml                 xhtml;
          application/xspf+xml                  xspf;
          application/zip                       zip;

          application/octet-stream              bin exe dll;
          application/octet-stream              deb;
          application/octet-stream              dmg;
          application/octet-stream              iso img;
          application/octet-stream              msi msp msm;

          application/vnd.openxmlformats-officedocument.wordprocessingml.document    docx;
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet          xlsx;
          application/vnd.openxmlformats-officedocument.presentationml.presentation  pptx;

          audio/midi                            mid midi kar;
          audio/mpeg                            mp3;
          audio/ogg                             ogg;
          audio/x-m4a                           m4a;
          audio/x-realaudio                     ra;

          video/3gpp                            3gpp 3gp;
          video/mp2t                            ts;
          video/mp4                             mp4;
          video/mpeg                            mpeg mpg;
          video/quicktime                       mov;
          video/webm                            webm;
          video/x-flv                           flv;
          video/x-m4v                           m4v;
          video/x-mng                           mng;
          video/x-ms-asf                        asx asf;
          video/x-ms-wmv                        wmv;
          video/x-msvideo                       avi;
      }
    nginx.conf: |2
      
      worker_processes auto;
      error_log ${NGINX_ERROR_LOG_PATH};
      pid /var/opt/rh/rh-nginx112/run/nginx/nginx.pid;

      # Load dynamic modules. See /opt/rh/rh-nginx112/root/usr/share/doc/README.dynamic.
      include /opt/rh/rh-nginx112/root/usr/share/nginx/modules/*.conf;

      events {
          worker_connections  1024;
        }

      http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';



        sendfile        on;
        tcp_nopush      on;
        tcp_nodelay     on;
        keepalive_timeout  65;
        types_hash_max_size 2048;

        include       /etc/opt/rh/rh-nginx112/nginx/mime.types;
        default_type  application/octet-stream;

        # Load modular configuration files from the /etc/nginx/conf.d dire
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /opt/app-root/etc/nginx.d/*.conf;

        server {
            listen       ${NGINX_DEFAULT_HTTP_PORT} default_server;
            listen       [::]:${NGINX_DEFAULT_HTTP_PORT} default_server;
            server_name  _;
            root         /opt/app-root/src;

            # Load configuration files for the default server block.
            include      /opt/app-root/etc/nginx.default.d/*.conf;

            location / {
            }

            error_page 404 /404.html;
            location = /40x.html {
            }

            error_page 500 502 503 504  /50x.html;
            location = /50x.html {
            }

           }


        # another virtual host using mix of IP-, name-, and port-based configuration
        #
        #server {
        #    listen       8000;
        #    listen       somename:8080;
        #    server_name  somename  alias  another.alias;

        #    location / {
        #        root   html;
        #        index  index.html index.htm;
        #    }
        #}


        # HTTPS server
        #
        #server {
        #    listen       443 ssl;
        #    server_name  localhost;

        #    ssl_certificate      cert.pem;
        #    ssl_certificate_key  cert.key;

        #    ssl_session_cache    shared:SSL:1m;
        #    ssl_session_timeout  5m;

        #    ssl_ciphers  HIGH:!aNULL:!MD5;
        #    ssl_prefer_server_ciphers  on;

        #    location / {
        #        root   html;
        #        index  index.html index.htm;
        #    }
        #}

      }

    nginx.conf.default: |2

      #user  nobody;
      worker_processes  1;

      #error_log  logs/error.log;
      #error_log  logs/error.log  notice;
      #error_log  logs/error.log  info;

      #pid        logs/nginx.pid;


      events {
          worker_connections  1024;
      }


      http {
          include       mime.types;
          default_type  application/octet-stream;

          #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
          #                  '$status $body_bytes_sent "$http_referer" '
          #                  '"$http_user_agent" "$http_x_forwarded_for"';

          access_log  ${NGINX_ACCESS_LOG_PATH}  main;

          sendfile        on;
          #tcp_nopush     on;

          #keepalive_timeout  0;
          keepalive_timeout  65;

          #gzip  on;

          server {
              listen       80;
              server_name  localhost;

              #charset koi8-r;

              #access_log  logs/host.access.log  main;

              location / {
                  root   html;
                  index  index.html index.htm;
              }

              #error_page  404              /404.html;

              # redirect server error pages to the static page /50x.html
              #
              error_page   500 502 503 504  /50x.html;
              location = /50x.html {
                  root   html;
              }

              # proxy the PHP scripts to Apache listening on 127.0.0.1:80
              #
              #location ~ \.php$ {
              #    proxy_pass   http://127.0.0.1;
              #}

              # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
              #
              #location ~ \.php$ {
              #    root           html;
              #    fastcgi_pass   127.0.0.1:9000;
              #    fastcgi_index  index.php;
              #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
              #    include        fastcgi_params;
              #}

              # deny access to .htaccess files, if Apache's document root
              # concurs with nginx's one
              #
              #location ~ /\.ht {
              #    deny  all;
              #}
          }


          # another virtual host using mix of IP-, name-, and port-based configuration
          #
          #server {
          #    listen       8000;
          #    listen       somename:8080;
          #    server_name  somename  alias  another.alias;

          #    location / {
          #        root   html;
          #        index  index.html index.htm;
          #    }
          #}


          # HTTPS server
          #
          #server {
          #    listen       443 ssl;
          #    server_name  localhost;

          #    ssl_certificate      cert.pem;
          #    ssl_certificate_key  cert.key;

          #    ssl_session_cache    shared:SSL:1m;
          #    ssl_session_timeout  5m;

          #    ssl_ciphers  HIGH:!aNULL:!MD5;
          #    ssl_prefer_server_ciphers  on;

          #    location / {
          #        root   html;
          #        index  index.html index.htm;
          #    }
          #}

      }
    uwsgi_params: |-
      uwsgi_param  QUERY_STRING       $query_string;
      uwsgi_param  REQUEST_METHOD     $request_method;
      uwsgi_param  CONTENT_TYPE       $content_type;
      uwsgi_param  CONTENT_LENGTH     $content_length;

      uwsgi_param  REQUEST_URI        $request_uri;
      uwsgi_param  PATH_INFO          $document_uri;
      uwsgi_param  DOCUMENT_ROOT      $document_root;
      uwsgi_param  SERVER_PROTOCOL    $server_protocol;
      uwsgi_param  REQUEST_SCHEME     $scheme;
      uwsgi_param  HTTPS              $https if_not_empty;

      uwsgi_param  REMOTE_ADDR        $remote_addr;
      uwsgi_param  REMOTE_PORT        $remote_port;
      uwsgi_param  SERVER_PORT        $server_port;
      uwsgi_param  SERVER_NAME        $server_name;
    uwsgi_params.default: |
      uwsgi_param  QUERY_STRING       $query_string;
      uwsgi_param  REQUEST_METHOD     $request_method;
      uwsgi_param  CONTENT_TYPE       $content_type;
      uwsgi_param  CONTENT_LENGTH     $content_length;

      uwsgi_param  REQUEST_URI        $request_uri;
      uwsgi_param  PATH_INFO          $document_uri;
      uwsgi_param  DOCUMENT_ROOT      $document_root;
      uwsgi_param  SERVER_PROTOCOL    $server_protocol;
      uwsgi_param  REQUEST_SCHEME     $scheme;
      uwsgi_param  HTTPS              $https if_not_empty;

      uwsgi_param  REMOTE_ADDR        $remote_addr;
      uwsgi_param  REMOTE_PORT        $remote_port;
      uwsgi_param  SERVER_PORT        $server_port;
      uwsgi_param  SERVER_NAME        $server_name;
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: nginx-config
- apiVersion: v1
  data:
    default.conf: ""
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    name: nginx-default.d
parameters:
  - name: NGINX_VERSION
    description: "Specify the nginx version you are using, valid options are: nginx-112, nginx-110, nginx-18" 
    value: "nginx-112"
    required: true   
  - name: NGINX_DEFAULT_HTTP_PORT
    description: "Default port nginx uses to listen on, if you specify a port lower than 1024, the container must run as privileged"
    value: "8080"
    required: true
  - name: NGINX_ACCESS_LOG_PATH
    description: "Path where nginx should write the access logs, either specify the file or if you want it the logs to be printed in the container logs redirect it to STDOUT by entering the value /dev/stdout "
    value: "/var/opt/rh/rh-nginx112/log/nginx/access.log"
    required: true
  - name: NGINX_ERROR_LOG_PATH
    description: "Path where nginx should write the error logs, either specify the file or if you want it the logs to be printed in the container logs use  /dev/stdout"
    value: "stderr"
    required: true
  - name: NGINX_ROUTE_HOSTNAME
    value: ""
    required: true 
  - name: APP_NAME
    value: "nginx"
    required: true
  - name: ROOT_DIRECTORY_SIZE_IN_GB
    value: "5"
    required: true
